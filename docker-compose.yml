version: "3.7"
services:
  mysql:
    image: mysql:8.0
    restart: on-failure
    volumes:
      - "./var/:/var/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: ghom&รงรง!
      MYSQL_DATABASE: docker
  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    restart: on-failure
    env_file:
      - .env
    user: 1000:1000
    volumes:
      - "./apps/symfony_project:/use/src/app"
  nginx:
    image: nginx:1.15.3-alpine
    restart: on-failure
    depends_on:
      - php
    volumes:
      - "./apps/my-symfony-app/public/:/usr/src/app"
      - "./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
    ports:
      - "80:80"
  elasticsearch:
      build:
        context: elasticsearch/
        args:
          ELK_VERSION: $ELK_VERSION
      volumes:
        - type: bind
          source: "./elasticsearch/config/elasticsearch.yml"
          target: "/usr/share/elasticsearch/config/elasticsearch.yml"
          read_only: true
        - type: volume
          source: elasticsearch
          target: /usr/share/elasticsearch/data
      ports:
        - "9200:9200"
        - "9300:9300"
      environment:
        ES_JAVA_OPTS: "-Xmx256m -Xms256m"
        ELASTIC_PASSWORD: changeme
        # Use single node discovery in order to disable production mode and avoid bootstrap checks
        # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
        discovery.type: single-node
      networks:
        - elk
  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: "./logstash/config/logstash.yml"
        target: "/usr/share/logstash/config/logstash.yml"
        read_only: true
      - type: bind
        source: "./logstash/pipeline"
        target: "/usr/share/logstash/pipeline"
        read_only: true
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch
  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: "./kibana/config/kibana.yml"
        target: "/usr/share/kibana/config/kibana.yml"
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
networks:
  elk:
    driver: bridge
volumes:
  elasticsearch: